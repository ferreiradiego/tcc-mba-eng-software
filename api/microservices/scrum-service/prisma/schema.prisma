generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserStory {
  id             String   @id @default(uuid())
  title          String
  description    String?
  status         String
  activationDate DateTime?
  sprintCode     String?
  blocked        Boolean  @default(false)
  tasks          Task[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Task {
  id            String   @id @default(uuid())
  userId        String
  userStoryId   String?
  userStory     UserStory? @relation(fields: [userStoryId], references: [id], onDelete: SetNull)
  title         String
  description   String?
  status        String   // todo, in_progress, done
  priority      String   // low, medium, high
  category      String?
  dueDate       DateTime?
  dependencies  String[]
  type          String   // bug, improvement, feature
  timeLogs      TimeLog[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum CeremonyType {
  DAILY
  PLANNING
  REVIEW
  RETROSPECTIVE
  OTHER
}

model Ceremony {
  id           String        @id @default(uuid())
  type         CeremonyType
  typeDesc     String?      // descrição do tipo, usada quando type = OTHER
  scheduledAt  DateTime     // data da cerimônia
  startTime    DateTime     // horário de início
  endTime      DateTime     // horário de fim
  duration     Int?         // minutos
  participants String[]
  timeLogs     TimeLog[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model TimeLog {
  id         String   @id @default(uuid())
  userId     String
  taskId     String
  task       Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  ceremonyId String?
  ceremony   Ceremony? @relation(fields: [ceremonyId], references: [id], onDelete: SetNull)
  completedAt DateTime? // Data de conclusão
  duration   Int? // em minutos
  status     String // running, paused, stopped, finished
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
